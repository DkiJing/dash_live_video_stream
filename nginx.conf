
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

# RTMP config
rtmp {
    server {
        listen 1935; # Listen on standard RTMP port
        chunk_size 4096;
        application live{
          live on;
          exec /usr/bin/ffmpeg -i rtmp://120.78.166.34:1935/$app/$name
           -c:v libx264 -c:a aac -strict -2 -s 1024x576 -f flv rtmp://120.78.166.34/play/$name_hi
           -c:v libx264 -c:a aac -strict -2 -s 640x360 -f flv rtmp://120.78.166.34/play/$name_med
           -c:v libx264 -c:a aac -strict -2 -s 160x90 -f flv rtmp://120.78.166.34/play/$name_low;
        }

        application play {
            live on;
            dash on;
            dash_nested on;
            dash_repetition on;
            dash_path /var/tmp/dash;
            dash_fragment 4;
            dash_playlist_length 120;
            dash_cleanup on;
            dash_variant _low bandwidth="128000" width="160" height="90";
            dash_variant _med bandwidth="416000" width="640" height="360";
            dash_variant _hi bandwidth="1024000" width="1024" height="576" max;
                
        }
    }
}
# End 
# HTTP config
http {
    server {
        listen 8080;
	server_name 120.78.166.34;

        location /dash{
            root /var/tmp;
            add_header Cache-Control no-cache;
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            add_header 'Access-Control-Allow-Headers' 'Range'; 
	}

        location /dash.js{
            root /var/www;
        }
	
    }
    include servers/*;
}
# End

